//
//  MovieDetailViewController.swift
//  PopCornFlix
//
//  Created by Burak Nur√ßi√ßek on 7.02.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit

final class MovieDetailViewController: UIViewController {

    // MARK: - Properties -
    lazy var scrollableStackView: ScrollableStackView = {
        let scrollableStackView = ScrollableStackView()
        scrollableStackView.translatesAutoresizingMaskIntoConstraints = false
        return scrollableStackView
    }()
    
    lazy var movieImageView: UIImageView = {
        let imageView = UIImageView()
        imageView.image = UIImage(named: "launchScreen")
        imageView.contentMode = .scaleAspectFit
        imageView.translatesAutoresizingMaskIntoConstraints = false
        return imageView
    }()
    
    lazy var movieNameLabel: UILabel = {
        let label = UILabel()
        label.translatesAutoresizingMaskIntoConstraints = false
        label.text = "Deneme"
        label.numberOfLines = 0
        return label
    }()
    
    lazy var movieDescriptionLabel: UILabel = {
        let label = UILabel()
        label.translatesAutoresizingMaskIntoConstraints = false
        label.text = "Deneme deneme deneme deneme"
        label.numberOfLines = 0
        return label
    }()
    
    lazy var movieVoteCount: UILabel = {
        let label = UILabel()
        label.translatesAutoresizingMaskIntoConstraints = false
        label.text = "100,000"
        label.numberOfLines = 0
        return label
    }()

    var presenter: MovieDetailPresenterInterface!

    // MARK: - Lifecycle -
    override func viewDidLoad() {
        super.viewDidLoad()
        configureNavigationBar()
        setup()
        insertViews()
    }
    
    // MARK - Setup -
    private func configureNavigationBar() {
        view.backgroundColor = .white
        let rightBarButtonItem = UIBarButtonItem(image: UIImage(named: "favorite_selected"), style: .plain, target: self, action: #selector(favoriteTapped))
        self.navigationItem.rightBarButtonItem  = rightBarButtonItem
    }
    
    private func setup() {
        view.addSubview(movieImageView)
        view.addSubview(scrollableStackView)
        
        NSLayoutConstraint.activate([movieImageView.topAnchor.constraint(equalTo: view.safeAreaLayoutGuide.topAnchor),
                                     movieImageView.leadingAnchor.constraint(equalTo: view.leadingAnchor),
                                     movieImageView.trailingAnchor.constraint(equalTo: view.trailingAnchor),
                                     movieImageView.heightAnchor.constraint(equalToConstant: 250),
                                    
                                     scrollableStackView.topAnchor.constraint(equalTo: movieImageView.bottomAnchor, constant: 20),
                                     scrollableStackView.leadingAnchor.constraint(equalTo: view.leadingAnchor),
                                     scrollableStackView.trailingAnchor.constraint(equalTo: view.trailingAnchor),
                                     scrollableStackView.bottomAnchor.constraint(equalTo: view.safeAreaLayoutGuide.bottomAnchor)])
    }
    
    private func insertViews() {
        scrollableStackView.stackView.insertArrangedSubview(movieNameLabel, at: 0)
        scrollableStackView.stackView.insertArrangedSubview(movieDescriptionLabel, at: 1)
        scrollableStackView.stackView.insertArrangedSubview(movieVoteCount, at: 2)
    }
    
    // MARK - Actions -
    @objc func favoriteTapped() {
        
    }

}

// MARK: - Extensions -
extension MovieDetailViewController: MovieDetailViewInterface {
}
